{"version":3,"sources":["mocks/mockinterruptsource.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,8BAA4B,kBAAkB,CAAC,CAAA;AAC/C,gCAA8B,oBAAoB,CAAC,CAAA;AAMnD;IAAyC,uCAAe;IACtD,6BAAY,MAAmB,EAAE,MAAmB;QAClD,kBAAM,MAAM,EAAE,MAAM,CAAC,CAAC;IACxB,CAAC;IAMD,qCAAO,GAAP,UAAQ,SAAe;QACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,6BAAa,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;IAC5D,CAAC;IACH,0BAAC;AAAD,CAZA,AAYC,CAZwC,iCAAe,GAYvD;AAZY,2BAAmB,sBAY/B,CAAA","file":"mockinterruptsource.js","sourcesContent":["import {InterruptArgs} from '../interruptargs';\nimport {InterruptSource} from '../interruptsource';\n\n\n/*\n * A simple InterruptSource for mocking during tests.\n */\nexport class MockInterruptSource extends InterruptSource {\n  constructor(attach?: () => void, detach?: () => void) {\n    super(attach, detach);\n  }\n\n  /*\n   * Simulates the external interrupt, triggering onInterrupt.\n   * @param innerArgs - The original event arguments or data, if any.\n   */\n  trigger(innerArgs?: any): void {\n    this.onInterrupt.emit(new InterruptArgs(this, innerArgs));\n  }\n}\n"]}