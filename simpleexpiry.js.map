{"version":3,"sources":["simpleexpiry.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,2BAAyB,cAAc,CAAC,CAAA;AAMxC;IAAkC,gCAAU;IAG1C;QACE,iBAAO,CAAC;QAHF,cAAS,GAAS,IAAI,CAAC;IAI/B,CAAC;IAOD,2BAAI,GAAJ,UAAK,KAAY;QACf,EAAE,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IACH,mBAAC;AAAD,CAnBA,AAmBC,CAnBiC,uBAAU,GAmB3C;AAnBY,oBAAY,eAmBxB,CAAA","file":"simpleexpiry.js","sourcesContent":["import {IdleExpiry} from './idleexpiry';\n\n/*\n * Represents a simple in-memory store of expiry values.\n * @extends IdleExpiry\n */\nexport class SimpleExpiry extends IdleExpiry {\n  private lastValue: Date = null;\n\n  constructor() {\n    super();\n  }\n\n  /*\n   * Gets or sets the last expiry date.\n   * @param value - The expiry value to set; omit to only return the value.\n   * @return The current expiry value.\n   */\n  last(value?: Date): Date {\n    if (value !== void 0) {\n      this.lastValue = value;\n    }\n\n    return this.lastValue;\n  }\n}\n"]}